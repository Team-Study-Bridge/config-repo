server:
  port: 9001  # 이제 의미 있는 실제 포트 사용

spring:
  application:
    name: auth-service

  datasource:
    url: jdbc:mysql://localhost:3307/user
    username: ${vault.auth-service.db-username}
    password: ${vault.auth-service.db-password}
    driver-class-name: com.mysql.cj.jdbc.Driver

  data:
    redis:
      host: localhost
      port: 6379
      password: ${vault.auth-service.redis-password}

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${vault.auth-service.mail-username}
    password: ${vault.auth-service.mail-password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  servlet:
    multipart:
      max-file-size: 15MB
      max-request-size: 15MB

naver:
  client-id: ${vault.auth-service.naver-client-id}
  client-secret: ${vault.auth-service.naver-client-secret}
  redirect-uri: http://localhost:8080/login/oauth2/redirect

cloud:
  aws:
    credentials:
      access-key: ${vault.auth-service.aws-access-key}
      secret-key: ${vault.auth-service.aws-secret-key}
    region:
      static: ap-northeast-2
    s3:
      bucket: aigongbu-profile-2324

mybatis:
  mapper-locations: classpath:mappers/*.xml
  type-aliases-package: com.example.authservice.model

badword:
  file-path: word_list.json

jwt:
  issuer: ${vault.auth-service.jwt-issuer}
  secret_key: ${vault.auth-service.jwt-secret}

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html

logging:
  level:
    org.springframework.security.web.FilterChainProxy: DEBUG
    org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: DEBUG
