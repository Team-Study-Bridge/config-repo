server:
  port: 9000

spring:
  application:
    name: gateway-service

  data:
    redis:
      host: localhost
      port: 6379
      password: ${redis-password}

  cloud:
    gateway:
      globalcors:
        add-to-simple-url-handler-mapping: true
        cors-configurations:
          '[/**]':
            allowed-origins: "http://localhost:8080"
            allowed-methods: "*"
            allowed-headers: "*"
            allow-credentials: true
            max-age: 3600

      httpclient:
        connect-timeout: 5000
        response-timeout: 180s

      routes:
        - id: auth-service
          uri: http://localhost:9001
          predicates:
            - Path=/auths/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
                key-resolver: "#{@smartKeyResolver}"
            - name: CircuitBreaker
              args:
                name: catalogCircuitBreaker
                fallbackUri: forward:/fallback/static

        - id: payment-service
          uri: http://localhost:9002
          predicates:
            - Path=/pay/**
          filters:
            - name: PreGatewayFilter
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
                key-resolver: "#{@smartKeyResolver}"
            - name: CircuitBreaker
              args:
                name: orderCircuitBreaker
                fallbackUri: forward:/fallback/static

        - id: lecture-service
          uri: http://localhost:9004
          predicates:
            - Path=/lectures/**
          filters:
            - name: PreGatewayFilter
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
                key-resolver: "#{@smartKeyResolver}"
            - name: CircuitBreaker
              args:
                name: orderCircuitBreaker
                fallbackUri: forward:/fallback/static

        - id: notibot-service
          uri: http://localhost:9006
          predicates:
            - Path=/noti/**
          filters:
            - name: PreGatewayFilter
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
                key-resolver: "#{@smartKeyResolver}"
            - name: CircuitBreaker
              args:
                name: orderCircuitBreaker
                fallbackUri: forward:/fallback/static

        - id: ai-curriculum-analysis-service
          uri: http://localhost:8000
          predicates:
            - Path=/ai/**
          filters:
            - name: PreGatewayFilter
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
                key-resolver: "#{@smartKeyResolver}"
            - name: CircuitBreaker
              args:
                name: orderCircuitBreaker
                fallbackUri: forward:/fallback/static

        - id: ai-chat-websocket
          uri: ws://localhost:8001
          predicates:
            - Path=/aichat/websocket

        - id: ai-chat
          uri: http://localhost:8001
          predicates:
            - Path=/aichat/**
          filters:
            - name: PreGatewayFilter
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
                key-resolver: "#{@smartKeyResolver}"
            - name: CircuitBreaker
              args:
                name: aiWebSocketCircuitBreaker
                fallbackUri: forward:/fallback/static

resilience4j:
  circuitbreaker:
    configs:
      default:
        permitted-number-of-calls-in-half-open-state: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 15000

  timelimiter:
    configs:
      default:
        timeoutDuration: 180s

team:
  auth-service-url: http://localhost:9001

logging:
  level:
    root: INFO
    org.springframework.cloud.gateway: DEBUG
    org.springframework.web.reactive: DEBUG
    com.example.gatewayservice: DEBUG
    reactor.netty: DEBUG
    org.springframework.http.server.reactive: DEBUG
