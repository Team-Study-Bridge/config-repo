server:
  port: 9006

spring:
  application:
    name: notibot-service

  task:
    scheduling:
      pool:
        size: 2

  datasource:
    url: jdbc:mysql://localhost:3307/notitable

  kafka:
    bootstrap-servers: ${kafka-bootstrap-servers}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"
        value:
          deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
        key:
          deserializer: org.apache.kafka.common.serialization.StringDeserializer

mybatis:
  mapper-locations: classpath:mappers/*.xml
  type-aliases-package: com.example.spring.notibotservice.notification.domain

firebase:
  vapid:
    public-key: ${firebase-vapid-public-key}
    private-key: ${firebase-vapid-private-key}
  service-account-json: ${firebase-service-account-json}

team:
  auth-service-url: http://localhost:9001

aws:
  ses:
    region: ap-northeast-2
    accessKey: ${ses-access-key}
    secretKey: ${ses-secret-key}
    senderEmail: ${ses-sender-email}

logging:
  level:
    org.mybatis: DEBUG
    org.mybatis.spring.SqlSessionFactoryBean: DEBUG
